@page "/"
@namespace BlazorProjekt.Pages
@using BlazorProjekt.Components
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="utf-8" />
    <title>BlazorProjekt</title>
    <base href="~/" />
    <link href="bootstrap/bootstrap.min.css" rel="stylesheet" />
    <link href="app.css" rel="stylesheet" />
    <link href="WetterStyleSheet.css" rel="stylesheet" />
    <!-- Chart.js einbinden -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <!-- Blazor Framework -->
    <script src="_framework/blazor.server.js"></script>

    <!-- Wichtig: Script mit window.WETTER Namespace -->
    <script>
        window.WETTER = {
            chart: null,

            drawWeatherChart: function(labels, data) {
                console.log("WETTER.drawWeatherChart aufgerufen", labels, data);

                const canvas = document.getElementById('weatherChart');
                if (!canvas) {
                    console.error("Canvas-Element 'weatherChart' nicht gefunden!");
                    return false;
                }

                // Warten auf DOM-Rendering
                setTimeout(() => {
                    try {
                        const ctx = canvas.getContext('2d');

                        // Alten Chart zerstören, wenn vorhanden
                        if (window.WETTER.chart) {
                            window.WETTER.chart.destroy();
                        }

                        // Farbgradient für die Füllung
                        const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);
                        gradient.addColorStop(0, 'rgba(66, 165, 245, 0.7)');
                        gradient.addColorStop(1, 'rgba(66, 165, 245, 0.1)');

                        // Chart erstellen
                        window.WETTER.chart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: labels,
                                datasets: [{
                                    label: 'Temperatur (°C)',
                                    data: data,
                                    borderWidth: 3,
                                    borderColor: 'rgba(30, 136, 229, 1)',
                                    backgroundColor: gradient,
                                    tension: 0.4,
                                    fill: true,
                                    pointRadius: 5,
                                    pointBackgroundColor: 'white',
                                    pointBorderColor: 'rgba(30, 136, 229, 1)',
                                    pointBorderWidth: 2,
                                    pointHoverRadius: 7,
                                    pointHoverBackgroundColor: 'white',
                                    pointHoverBorderColor: 'rgba(25, 118, 210, 1)',
                                    pointHoverBorderWidth: 3
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                plugins: {
                                    legend: {
                                        display: true,
                                        labels: {
                                            font: {
                                                family: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                                                size: 14
                                            }
                                        }
                                    },
                                    tooltip: {
                                        enabled: true,
                                        backgroundColor: 'rgba(37, 64, 97, 0.9)',
                                        titleFont: {
                                            family: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                                            size: 14
                                        },
                                        bodyFont: {
                                            family: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                                            size: 13
                                        },
                                        padding: 12,
                                        displayColors: false,
                                        callbacks: {
                                            title: function(tooltipItems) {
                                                return tooltipItems[0].label + ' Uhr';
                                            },
                                            label: function(context) {
                                                return context.raw + '°C';
                                            }
                                        }
                                    }
                                },
                                scales: {
                                    x: {
                                        title: {
                                            display: true,
                                            text: 'Uhrzeit',
                                            font: {
                                                family: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                                                size: 14,
                                                weight: 'bold'
                                            }
                                        },
                                        grid: {
                                            color: 'rgba(200, 200, 200, 0.3)'
                                        },
                                        ticks: {
                                            font: {
                                                family: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                                                size: 12
                                            }
                                        }
                                    },
                                    y: {
                                        title: {
                                            display: true,
                                            text: 'Temperatur (°C)',
                                            font: {
                                                family: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                                                size: 14,
                                                weight: 'bold'
                                            }
                                        },
                                        grid: {
                                            color: 'rgba(200, 200, 200, 0.3)'
                                        },
                                        ticks: {
                                            font: {
                                                family: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                                                size: 12
                                            },
                                            callback: function(value) {
                                                return value + '°C';
                                            }
                                        }
                                    }
                                },
                                animation: {
                                    duration: 1500,
                                    easing: 'easeOutQuart'
                                }
                            }
                        });

                        console.log("Chart erfolgreich erstellt!");
                    } catch (err) {
                        console.error("Fehler beim Erstellen des Charts:", err);
                    }
                }, 500); // Längere Verzögerung, um sicherzustellen, dass das DOM vollständig gerendert ist

                return true;
            }
        };
    </script>
</body>
</html>