@page "/ocr"
@inject BlazorProjekt.Services.OcrService OcrService
@using Microsoft.AspNetCore.Components.Forms

<h3>OCR Evaluation</h3>

<InputFile OnChange="HandleFileSelectedAsync" maxAllowedSize="15728640" />

<button type="button" @onclick="EvaluateFile" disabled="@(!isFileLoaded)">
    Evaluate
</button>

@if (!string.IsNullOrWhiteSpace(result))
{
    <div style="margin-top: 20px;">
        <table style="border-collapse: collapse; width: 100%;">
            <tr><th style="text-align: left; padding: 4px;">Property</th><th style="text-align: left; padding: 4px;">Value</th></tr>
            <tr><td style="padding: 4px;">File ID</td><td style="padding: 4px;">@OcrService.FileId</td></tr>
            <tr><td style="padding: 4px;">File Name</td><td style="padding: 4px;">@OcrService.FileName</td></tr>
            <tr><td style="padding: 4px;">File Extension</td><td style="padding: 4px;">@OcrService.FileEnding</td></tr>
            <tr><td style="padding: 4px;">OCR Method</td><td style="padding: 4px;">@OcrService.OcrMethod</td></tr>
            <tr><td style="padding: 4px;">Evaluation Time</td><td style="padding: 4px;">@OcrService.EvaluationTime?.ToString("yyyy-MM-dd HH:mm:ss")</td></tr>
        </table>

        <p style="margin-top: 20px;"><strong>Recognized Text:</strong></p>
        <pre style="background-color: #f6f6f6; padding: 10px; border: 1px solid #ddd;">@result</pre>
    </div>
}
else if (isEvaluated && string.IsNullOrWhiteSpace(result))
{
    <div style="margin-top: 20px; color: red;">
        <strong>No text could be extracted or unsupported file type.</strong>
    </div>
}

@code {
    private string? result;
    private bool isFileLoaded = false;
    private bool isEvaluated = false;

    private async Task HandleFileSelectedAsync(InputFileChangeEventArgs e)
    {
        try
        {
            var file = e.File;
            if (file != null)
            {
                await OcrService.LoadFileAsync(file);
                isFileLoaded = true;
                result = null;
                isEvaluated = false;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading file: {ex.Message}");
        }
    }

    private void EvaluateFile()
    {
        result = OcrService.Evaluate();
        isEvaluated = true;
    }
}
